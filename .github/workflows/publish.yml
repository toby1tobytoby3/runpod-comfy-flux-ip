name: Build & Publish to GHCR

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: runpod-comfy-flux-ip

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Safer disk cleanup that does NOT move the workspace
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
          # keep: nothing

      # Prove the files are here before building
      - name: Assert Dockerfile exists
        run: |
          echo "REPO=${{ github.repository }}"
          echo "BRANCH=${{ github.ref_name }}"
          echo "WORKSPACE=$GITHUB_WORKSPACE"
          ls -la "$GITHUB_WORKSPACE"
          echo "--- show tree ---"
          find "$GITHUB_WORKSPACE" -maxdepth 3 -type f -print | sort
          test -f "$GITHUB_WORKSPACE/Dockerfile" || (echo "ðŸš¨ Dockerfile NOT FOUND at repo root"; exit 99)

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}},value=${{ github.ref_name }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push (linux/amd64)
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}
          file: ${{ github.workspace }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: false
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
